//
// File generated by rootcint at Tue May 21 11:02:05 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME jediwasaDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "jediwasaDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TreeTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeTrack(void *p = 0);
   static void *newArray_TreeTrack(Long_t size, void *p);
   static void delete_TreeTrack(void *p);
   static void deleteArray_TreeTrack(void *p);
   static void destruct_TreeTrack(void *p);
   static void streamer_TreeTrack(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeTrack*)
   {
      ::TreeTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeTrack", ::TreeTrack::Class_Version(), "./TreeTrack.hh", 19,
                  typeid(::TreeTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeTrack::Dictionary, isa_proxy, 0,
                  sizeof(::TreeTrack) );
      instance.SetNew(&new_TreeTrack);
      instance.SetNewArray(&newArray_TreeTrack);
      instance.SetDelete(&delete_TreeTrack);
      instance.SetDeleteArray(&deleteArray_TreeTrack);
      instance.SetDestructor(&destruct_TreeTrack);
      instance.SetStreamerFunc(&streamer_TreeTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeTrack*)
   {
      return GenerateInitInstanceLocal((::TreeTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void JediPolAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JediPolAnalysis(void *p = 0);
   static void *newArray_JediPolAnalysis(Long_t size, void *p);
   static void delete_JediPolAnalysis(void *p);
   static void deleteArray_JediPolAnalysis(void *p);
   static void destruct_JediPolAnalysis(void *p);
   static void streamer_JediPolAnalysis(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JediPolAnalysis*)
   {
      ::JediPolAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JediPolAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JediPolAnalysis", ::JediPolAnalysis::Class_Version(), "./JediPolAnalysis.hh", 24,
                  typeid(::JediPolAnalysis), ::ROOT::DefineBehavior(ptr, ptr),
                  &::JediPolAnalysis::Dictionary, isa_proxy, 0,
                  sizeof(::JediPolAnalysis) );
      instance.SetNew(&new_JediPolAnalysis);
      instance.SetNewArray(&newArray_JediPolAnalysis);
      instance.SetDelete(&delete_JediPolAnalysis);
      instance.SetDeleteArray(&deleteArray_JediPolAnalysis);
      instance.SetDestructor(&destruct_JediPolAnalysis);
      instance.SetStreamerFunc(&streamer_JediPolAnalysis);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JediPolAnalysis*)
   {
      return GenerateInitInstanceLocal((::JediPolAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JediPolAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TreeTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TreeTrack::Class_Name()
{
   return "TreeTrack";
}

//______________________________________________________________________________
const char *TreeTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TreeTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TreeTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TreeTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr JediPolAnalysis::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JediPolAnalysis::Class_Name()
{
   return "JediPolAnalysis";
}

//______________________________________________________________________________
const char *JediPolAnalysis::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JediPolAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JediPolAnalysis::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JediPolAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JediPolAnalysis::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JediPolAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JediPolAnalysis::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JediPolAnalysis*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void JediPolAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class JediPolAnalysis.

   CAnalysisModule::Streamer(R__b);
}

//______________________________________________________________________________
void JediPolAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JediPolAnalysis.
      TClass *R__cl = ::JediPolAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Verbose", &m_Verbose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PeakTimeCut", &m_PeakTimeCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_FWCHitBank", &m_FWCHitBank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_FTHHitBank", &m_FTHHitBank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_FRHHitBank", &m_FRHHitBank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_FPCTrackFinder", &m_FPCTrackFinder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_FPCTrackBank", &m_FPCTrackBank);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_Header", &m_Header);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_Setup", &m_Setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_OffsetTQDC", &m_OffsetTQDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_OffsetTGPX", &m_OffsetTGPX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_File", &m_File);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_Tree", &m_Tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_EBeam", &m_EBeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Tar", &m_Tar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Pol", &m_Pol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_RunNo", &m_RunNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TimeH", &m_TimeH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TimeCycle", &m_TimeCycle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Trg", &m_Trg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_Tracks", &m_Tracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_NTracks", &m_NTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TimeQDCPeak[8]", m_TimeQDCPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TimeQDCPeakDev[8]", m_TimeQDCPeakDev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_DeltaTimePeak[8]", m_DeltaTimePeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_DeltaTimePeakDev[8]", m_DeltaTimePeakDev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_HFailReas", &m_HFailReas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_HNTracks", &m_HNTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_HTimeADC[8]", &m_HTimeADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_HTimeADCvsEl[8]", &m_HTimeADCvsEl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_HTimeDelta[8]", &m_HTimeDelta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_HTimeDeltavsEl[8]", &m_HTimeDeltavsEl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_El[8]", m_El);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ADC[8]", m_ADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_TDC[8]", m_TDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_Track", &m_Track);
      CAnalysisModule::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_JediPolAnalysis(void *p) {
      return  p ? new(p) ::JediPolAnalysis : new ::JediPolAnalysis;
   }
   static void *newArray_JediPolAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::JediPolAnalysis[nElements] : new ::JediPolAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_JediPolAnalysis(void *p) {
      delete ((::JediPolAnalysis*)p);
   }
   static void deleteArray_JediPolAnalysis(void *p) {
      delete [] ((::JediPolAnalysis*)p);
   }
   static void destruct_JediPolAnalysis(void *p) {
      typedef ::JediPolAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_JediPolAnalysis(TBuffer &buf, void *obj) {
      ((::JediPolAnalysis*)obj)->::JediPolAnalysis::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::JediPolAnalysis

//______________________________________________________________________________
void TreeTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeTrack.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((double*)fTdc);
      R__b.ReadStaticArray((double*)fAdc);
      R__b.ReadStaticArray((int*)fEl);
      R__b >> fTheta;
      R__b >> fPhi;
      R__b >> fThetaTrue;
      R__b >> fPhiTrue;
      R__b >> fETrue;
      R__b.CheckByteCount(R__s, R__c, TreeTrack::IsA());
   } else {
      R__c = R__b.WriteVersion(TreeTrack::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(fTdc, 8);
      R__b.WriteArray(fAdc, 8);
      R__b.WriteArray(fEl, 8);
      R__b << fTheta;
      R__b << fPhi;
      R__b << fThetaTrue;
      R__b << fPhiTrue;
      R__b << fETrue;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TreeTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeTrack.
      TClass *R__cl = ::TreeTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTdc[8]", fTdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAdc[8]", fAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEl[8]", fEl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaTrue", &fThetaTrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiTrue", &fPhiTrue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fETrue", &fETrue);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeTrack(void *p) {
      return  p ? new(p) ::TreeTrack : new ::TreeTrack;
   }
   static void *newArray_TreeTrack(Long_t nElements, void *p) {
      return p ? new(p) ::TreeTrack[nElements] : new ::TreeTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeTrack(void *p) {
      delete ((::TreeTrack*)p);
   }
   static void deleteArray_TreeTrack(void *p) {
      delete [] ((::TreeTrack*)p);
   }
   static void destruct_TreeTrack(void *p) {
      typedef ::TreeTrack current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TreeTrack(TBuffer &buf, void *obj) {
      ((::TreeTrack*)obj)->::TreeTrack::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TreeTrack

/********************************************************
* jediwasaDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablejediwasaDict();

extern "C" void G__set_cpp_environmentjediwasaDict() {
  G__cpp_reset_tagtablejediwasaDict();
}
#include <new>
extern "C" int G__cpp_dllrevjediwasaDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TreeTrack */
static int G__jediwasaDict_901_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeTrack[n];
     } else {
       p = new((void*) gvp) TreeTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeTrack;
     } else {
       p = new((void*) gvp) TreeTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeTrack*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeTrack*) G__getstructoffset())->SetTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeTrack*) G__getstructoffset())->SetPhiTrue((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeTrack*) G__getstructoffset())->SetThetaTrue((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeTrack*) G__getstructoffset())->SetETrue((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeTrack*) G__getstructoffset())->SetADCs((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeTrack*) G__getstructoffset())->SetTDCs((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeTrack*) G__getstructoffset())->SetElements((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_901_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__jediwasaDict_901_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeTrack(*(TreeTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeTrack G__TTreeTrack;
static int G__jediwasaDict_901_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeTrack*) (soff+(sizeof(TreeTrack)*i)))->~G__TTreeTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeTrack*) (soff))->~G__TTreeTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__jediwasaDict_901_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeTrack* dest = (TreeTrack*) G__getstructoffset();
   *dest = *(TreeTrack*) libp->para[0].ref;
   const TreeTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JediPolAnalysis */
static int G__jediwasaDict_902_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JediPolAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JediPolAnalysis[n];
     } else {
       p = new((void*) gvp) JediPolAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JediPolAnalysis;
     } else {
       p = new((void*) gvp) JediPolAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JediPolAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JediPolAnalysis((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) JediPolAnalysis((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JediPolAnalysis*) G__getstructoffset())->SetTimeQDCPeak((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JediPolAnalysis*) G__getstructoffset())->SetDeltaTimePeak((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JediPolAnalysis*) G__getstructoffset())->SetupSpectra((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JediPolAnalysis*) G__getstructoffset())->TrackRaw((WHitBank*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JediPolAnalysis*) G__getstructoffset())->TrackReco((WHitScint*) G__int(libp->para[0]), (WHitBank*) G__int(libp->para[1])
, (WHitBank*) G__int(libp->para[2]), (WTrackBank*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), *(Bool_t*) G__Boolref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JediPolAnalysis*) G__getstructoffset())->HitInfo((WHitScint*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JediPolAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JediPolAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JediPolAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JediPolAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JediPolAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JediPolAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JediPolAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JediPolAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__jediwasaDict_902_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JediPolAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__jediwasaDict_902_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JediPolAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JediPolAnalysis(*(JediPolAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JediPolAnalysis G__TJediPolAnalysis;
static int G__jediwasaDict_902_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JediPolAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JediPolAnalysis*) (soff+(sizeof(JediPolAnalysis)*i)))->~G__TJediPolAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JediPolAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JediPolAnalysis*) (soff))->~G__TJediPolAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__jediwasaDict_902_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JediPolAnalysis* dest = (JediPolAnalysis*) G__getstructoffset();
   *dest = *(JediPolAnalysis*) libp->para[0].ref;
   const JediPolAnalysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TreeTrack */

/* JediPolAnalysis */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncjediwasaDict {
 public:
  G__Sizep2memfuncjediwasaDict(): p(&G__Sizep2memfuncjediwasaDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncjediwasaDict::*p)();
};

size_t G__get_sizep2memfuncjediwasaDict()
{
  G__Sizep2memfuncjediwasaDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancejediwasaDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack))) {
     TreeTrack *G__Lderived;
     G__Lderived=(TreeTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack),G__get_linked_tagnum(&G__jediwasaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis))) {
     JediPolAnalysis *G__Lderived;
     G__Lderived=(JediPolAnalysis*)0x1000;
     {
       CAnalysisModule *G__Lpbase=(CAnalysisModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis),G__get_linked_tagnum(&G__jediwasaDictLN_CAnalysisModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       CDataObject *G__Lpbase=(CDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis),G__get_linked_tagnum(&G__jediwasaDictLN_CDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis),G__get_linked_tagnum(&G__jediwasaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablejediwasaDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__jediwasaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__jediwasaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__jediwasaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__jediwasaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__jediwasaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__jediwasaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__jediwasaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__jediwasaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__jediwasaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CMdArray<Int_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_CMdArraylEintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("CWvector<Int_t>",117,G__get_linked_tagnum(&G__jediwasaDictLN_CWvectorlEintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__jediwasaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__jediwasaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TreeTrack */
static void G__setup_memvarTreeTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack));
   { TreeTrack *p; p=(TreeTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTdc)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fTdc[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAdc)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fAdc[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEl)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fEl[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTheta)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fTheta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPhi)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fThetaTrue)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fThetaTrue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPhiTrue)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPhiTrue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fETrue)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fETrue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JediPolAnalysis */
static void G__setup_memvarJediPolAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis));
   { JediPolAnalysis *p; p=(JediPolAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_Verbose=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_PeakTimeCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"m_ScaleTDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"m_ScaleTQDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_WHitBank),-1,-1,4,"m_FWCHitBank=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_WHitBank),-1,-1,4,"m_FTHHitBank=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_WHitBank),-1,-1,4,"m_FRHHitBank=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_FPCTracksVH),-1,-1,4,"m_FPCTrackFinder=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_WTrackBank),-1,-1,4,"m_FPCTrackBank=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_REventHeader),-1,-1,4,"m_Header=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_LVDSSetup),-1,-1,4,"m_Setup=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_OffsetTQDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_OffsetTGPX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TFile),-1,-1,4,"m_File=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TTree),-1,-1,4,"m_Tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_EBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_Tar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_Pol=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_RunNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_TimeH=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_TimeCycle=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_Trg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TClonesArray),-1,-1,4,"m_Tracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_NTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_TimeQDCPeak[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_TimeQDCPeakDev[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_DeltaTimePeak[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_DeltaTimePeakDev[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TH1D),-1,-1,4,"m_HFailReas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TH1D),-1,-1,4,"m_HNTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TH1D),-1,-1,4,"m_HTimeADC[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TH2D),-1,-1,4,"m_HTimeADCvsEl[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TH1D),-1,-1,4,"m_HTimeDelta[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TH2D),-1,-1,4,"m_HTimeDeltavsEl[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_El[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_ADC[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"m_TDC[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack),-1,-1,4,"m_Track=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__jediwasaDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarjediwasaDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTreeTrack(void) {
   /* TreeTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack));
   G__memfunc_setup("TreeTrack",901,G__jediwasaDict_901_0_1, 105, G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPhi",589,G__jediwasaDict_901_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTheta",802,G__jediwasaDict_901_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiTrue",1005,G__jediwasaDict_901_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaTrue",1218,G__jediwasaDict_901_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetETrue",785,G__jediwasaDict_901_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - etrue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetADCs",615,G__jediwasaDict_901_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - adc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCs",634,G__jediwasaDict_901_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - tdc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetElements",1129,G__jediwasaDict_901_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - el", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jediwasaDict_901_0_11, 85, G__get_linked_tagnum(&G__jediwasaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jediwasaDict_901_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jediwasaDict_901_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jediwasaDict_901_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jediwasaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jediwasaDict_901_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jediwasaDict_901_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jediwasaDict_901_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jediwasaDict_901_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jediwasaDict_901_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TreeTrack", 901, G__jediwasaDict_901_0_23, (int) ('i'), G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack), -1, 0, 1, 1, 1, 0, "u 'TreeTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TreeTrack", 1027, G__jediwasaDict_901_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__jediwasaDict_901_0_25, (int) ('u'), G__get_linked_tagnum(&G__jediwasaDictLN_TreeTrack), -1, 1, 1, 1, 1, 0, "u 'TreeTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJediPolAnalysis(void) {
   /* JediPolAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis));
   G__memfunc_setup("JediPolAnalysis",1515,G__jediwasaDict_902_0_1, 105, G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JediPolAnalysis",1515,G__jediwasaDict_902_0_2, 105, G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BeginOfRun",975,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EndOfRun",769,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessEvent",1249,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimeQDCPeak",1300,G__jediwasaDict_902_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - layer d - 'Double_t' 0 - peakTime "
"d - 'Double_t' 0 - dev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeltaTimePeak",1574,G__jediwasaDict_902_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - layer d - 'Double_t' 0 - peakTime "
"d - 'Double_t' 0 - dev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupSpectra",1251,G__jediwasaDict_902_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackRaw",799,G__jediwasaDict_902_0_10, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'WHitBank' - 0 - hitBank i - 'Int_t' 0 - planeGlobal "
"i - 'Int_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackReco",894,G__jediwasaDict_902_0_11, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'WHitScint' - 0 - FTHHit U 'WHitBank' - 0 - FWCHitBank "
"U 'WHitBank' - 0 - FRHHitBank U 'WTrackBank' - 0 - FPCTrackBank "
"i - 'Int_t' 0 - iTrack g - 'Bool_t' 1 - isGoodTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitInfo",689,G__jediwasaDict_902_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"U 'WHitScint' - 0 - hit i - 'Int_t' 0 - planeGlobal "
"d - 'Double_t' 1 - ADC d - 'Double_t' 1 - TDC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__jediwasaDict_902_0_13, 85, G__get_linked_tagnum(&G__jediwasaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JediPolAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__jediwasaDict_902_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JediPolAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__jediwasaDict_902_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JediPolAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__jediwasaDict_902_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JediPolAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__jediwasaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__jediwasaDict_902_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__jediwasaDict_902_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JediPolAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__jediwasaDict_902_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JediPolAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__jediwasaDict_902_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JediPolAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__jediwasaDict_902_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JediPolAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("JediPolAnalysis", 1515, G__jediwasaDict_902_0_25, (int) ('i'), G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis), -1, 0, 1, 1, 1, 0, "u 'JediPolAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JediPolAnalysis", 1641, G__jediwasaDict_902_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__jediwasaDict_902_0_27, (int) ('u'), G__get_linked_tagnum(&G__jediwasaDictLN_JediPolAnalysis), -1, 1, 1, 1, 1, 0, "u 'JediPolAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncjediwasaDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaljediwasaDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcjediwasaDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__jediwasaDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__jediwasaDictLN_CDataObject = { "CDataObject" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_CAnalysisModule = { "CAnalysisModule" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__jediwasaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_WHitScint = { "WHitScint" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_WHitBank = { "WHitBank" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_CMdArraylEintgR = { "CMdArray<int>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_CWvectorlEintgR = { "CWvector<int>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_REventHeader = { "REventHeader" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_WTrackBank = { "WTrackBank" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_FPCTracksVH = { "FPCTracksVH" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_LVDSSetup = { "LVDSSetup" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_TreeTrack = { "TreeTrack" , 99 , -1 };
G__linked_taginfo G__jediwasaDictLN_JediPolAnalysis = { "JediPolAnalysis" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablejediwasaDict() {
  G__jediwasaDictLN_TClass.tagnum = -1 ;
  G__jediwasaDictLN_TBuffer.tagnum = -1 ;
  G__jediwasaDictLN_TMemberInspector.tagnum = -1 ;
  G__jediwasaDictLN_TObject.tagnum = -1 ;
  G__jediwasaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__jediwasaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__jediwasaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__jediwasaDictLN_TClonesArray.tagnum = -1 ;
  G__jediwasaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__jediwasaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__jediwasaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__jediwasaDictLN_CDataObject.tagnum = -1 ;
  G__jediwasaDictLN_CAnalysisModule.tagnum = -1 ;
  G__jediwasaDictLN_TFile.tagnum = -1 ;
  G__jediwasaDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__jediwasaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__jediwasaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__jediwasaDictLN_TTree.tagnum = -1 ;
  G__jediwasaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__jediwasaDictLN_TH1D.tagnum = -1 ;
  G__jediwasaDictLN_TH2D.tagnum = -1 ;
  G__jediwasaDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__jediwasaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__jediwasaDictLN_WHitScint.tagnum = -1 ;
  G__jediwasaDictLN_WHitBank.tagnum = -1 ;
  G__jediwasaDictLN_CMdArraylEintgR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__jediwasaDictLN_CWvectorlEintgR.tagnum = -1 ;
  G__jediwasaDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__jediwasaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__jediwasaDictLN_REventHeader.tagnum = -1 ;
  G__jediwasaDictLN_WTrackBank.tagnum = -1 ;
  G__jediwasaDictLN_FPCTracksVH.tagnum = -1 ;
  G__jediwasaDictLN_LVDSSetup.tagnum = -1 ;
  G__jediwasaDictLN_TreeTrack.tagnum = -1 ;
  G__jediwasaDictLN_JediPolAnalysis.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablejediwasaDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_CDataObject);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_CAnalysisModule);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_WHitScint);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_WHitBank);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_CMdArraylEintgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_CWvectorlEintgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_REventHeader);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_WTrackBank);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_FPCTracksVH);
   G__get_linked_tagnum_fwd(&G__jediwasaDictLN_LVDSSetup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jediwasaDictLN_TreeTrack),sizeof(TreeTrack),-1,29952,(char*)NULL,G__setup_memvarTreeTrack,G__setup_memfuncTreeTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__jediwasaDictLN_JediPolAnalysis),sizeof(JediPolAnalysis),-1,62720,(char*)NULL,G__setup_memvarJediPolAnalysis,G__setup_memfuncJediPolAnalysis);
}
extern "C" void G__cpp_setupjediwasaDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupjediwasaDict()");
  G__set_cpp_environmentjediwasaDict();
  G__cpp_setup_tagtablejediwasaDict();

  G__cpp_setup_inheritancejediwasaDict();

  G__cpp_setup_typetablejediwasaDict();

  G__cpp_setup_memvarjediwasaDict();

  G__cpp_setup_memfuncjediwasaDict();
  G__cpp_setup_globaljediwasaDict();
  G__cpp_setup_funcjediwasaDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncjediwasaDict();
  return;
}
class G__cpp_setup_initjediwasaDict {
  public:
    G__cpp_setup_initjediwasaDict() { G__add_setup_func("jediwasaDict",(G__incsetup)(&G__cpp_setupjediwasaDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initjediwasaDict() { G__remove_setup_func("jediwasaDict"); }
};
G__cpp_setup_initjediwasaDict G__cpp_setup_initializerjediwasaDict;

